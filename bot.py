import telebot
from extensions import APIException, Converter
from config import TOKEN, val, cur, crip


bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message):
    bot.reply_to(message, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.chat.first_name}!\n"
                          '–≠—Ç–æ—Ç –±–æ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∞–º–∏ –≤–∞–ª—é—Ç—É –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É.\n'
                          f"–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º, –Ω–∞–∂–º–∏—Ç–µ /help")


@bot.message_handler(commands=['help'])
def helper(message: telebot.types.Message):
    bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–æ–º, –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n'
                                      '{–ø–µ—Ä–≤–∞—è –≤–∞–ª—é—Ç–∞(–æ—Ç–∫—É–¥–∞)}, {–≤—Ç–æ—Ä–∞—è –≤–∞–ª—é—Ç–∞(–∫—É–¥–∞)}, {–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ}\n'
                                      '–ù–∞–ª–∏—á–∏–µ –∑–∞–ø—è—Ç—ã—Ö –º–µ–∂–¥—É –≤–∞–ª—é—Ç–∞–º–∏ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤–≤–∏–¥—É —Ä–∞–∑–Ω–æ—Å—Ç–∏ –≤–∞–ª—é—Ç–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π\n'
                                      '–ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: "–¥–æ–ª–ª–∞—Ä, —Ä—É–±–ª—å, 50" –∏–ª–∏ "—Ç—É—Ä–µ—Ü–∫–∞—è –ª–∏—Ä–∞, –π–µ–Ω–∞, 100"\n'
                                      '–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç, –Ω–∞–∂–º–∏—Ç–µ /values\n'
                                      '–ò–ª–∏ /cripto, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç')


@bot.message_handler(commands=['values'])
def values(message: telebot.types.Message):
    text = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:\n'
    for key in sorted(cur.keys()):
        text = '\n'.join((text, key))
    bot.reply_to(message, text)


@bot.message_handler(commands=['cripto'])
def values(message: telebot.types.Message):
    text = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã:\n'
    for key in crip.keys():
        text = '\n'.join((text, key))
    bot.reply_to(message, text)


# @bot.message_handler(commands=['stop'])
# def stop(message):
#     bot.stop_bot()


@bot.message_handler(content_types=['text'])
def convert(message: telebot.types.Message):
    try:
        value = message.text.lower().split(', ')

        if len(value) != 3:
            raise APIException('–í–≤–µ–¥–µ–Ω–æ –Ω–µ 3 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∏–ª–∏ –≥–¥–µ-—Ç–æ –æ–ø–µ—á–∞—Ç–∫–∞ üòû')

        quote, base, amount = value
        total_base = Converter.get_price(quote, base, amount)
    except APIException as e:
        bot.reply_to(message, f'–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ ‚ò∫Ô∏è\n{e}')
    except Exception as e:
        bot.reply_to(message, f'–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ü•∫\n{e}')
    else:
        text = f'{amount} {val[quote]} –≤ {val[base]} - {total_base}'
        bot.reply_to(message, text)


# @bot.message_handler(content_types=['text'])
# def echo_reply(message: telebot.types.Message):
#     bot.reply_to(message, message.text)


@bot.message_handler(content_types=['voice'])
def voice_reply(message: telebot.types.Message):
    bot.reply_to(message, '–ü–æ–∫–∞ –Ω–µ –º–æ–≥—É —Å–ª—É—à–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ...\n –ù–æ —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —É –≤–∞—Å –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –≥–æ–ª–æ—Å)))')


@bot.message_handler(content_types=['photo'])
def photo_replay(message: telebot.types.Message):
    bot.reply_to(message, '–ï—Å–ª–∏ –±—ã —è –∑–Ω–∞–ª, —á—Ç–æ –Ω–∞ —ç—Ç–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–µ, –º–æ–∂–µ—Ç –±—ã—Ç—å –º–Ω–µ –∏ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –±—ã)))')


if __name__ == '__main__':
    bot.polling(none_stop=True)
